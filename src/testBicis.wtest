
import bicis.*

describe "Test Bicis" {

	const bici1= new Bicicletas( rodado=28, largo=150, marca="Olmo")
	const bici2= new Bicicletas( rodado=26, largo=110, marca="Legnano")
	const bici3= new Bicicletas( rodado=20, largo=90, marca="Legnano")
	
	
	method initialize(){
		//accesorio bici 1
		bici1.agregarAccesorio(new Farolito())
		
		//accesorio bici 2
		bici2.agregarAccesorio(new Farolito())
		bici2.agregarAccesorio(new Canasto(volumen= 8))
		bici2.agregarAccesorio(new Morral(largo= 21, tieneOjoDeGato=true))
		
		//accesorio bici 3
		bici2.agregarAccesorio(new Morral(largo= 6, tieneOjoDeGato=false))
	}
	

	//test bici 1
	test "bici 1 altura"{
		assert.equals(85,bici1.altura())
	}
	test "bici 1 velocidad"{
		assert.equals(34,bici1.velocidadCrucero())
	}
	test "bici 1 carga"{
		assert.equals(0,bici1.carga())
	}
	test "bici 1 peso"{
		assert.equals(14.5,bici1.peso())
	}
	test "bici 1 tiene luz "{
		assert.equals(true ,bici1.tieneLuz())
	}
	test "bici 1 tiene accesorio liviano "{
		assert.equals(1 ,bici1.cantidadAccesoriosLivianos())
	}
	
	
	//test bici2
	test "bici 2 altura"{
		assert.equals(80,bici2.altura())
	}
	test "bici 2 velocidad"{
		assert.equals(28,bici2.velocidadCrucero())
	}
	test "bici 2 carga"{
		assert.equals(16,bici2.carga())
	}
	test "bici 2 peso"{
		assert.equals(15.5,bici2.peso())
	}
	test "bici 2 tiene luz "{
		assert.equals(true ,bici2.tieneLuz())
	}
	test "bici 2 tiene accesorio liviano "{
		assert.equals(2 ,bici2.cantidadAccesoriosLivianos())
	}
	
	//test bici3
	test "bici 3 altura"{
		assert.equals(65,bici3.altura())
	}
	test "bici 3 velocidad"{
		assert.equals(22,bici3.velocidadCrucero())
	}
	test "bici 3 carga"{
		assert.equals(2,bici3.carga())
	}
	test "bici 3 peso"{
		assert.equals(11.2,bici3.peso())
	}
	test "bici 3 tiene luz "{
		assert.equals(false ,bici3.tieneLuz())
	}
	test "bici 3 tiene accesorio liviano "{
		assert.equals(0 ,bici3.cantidadAccesoriosLivianos())
	}
}
